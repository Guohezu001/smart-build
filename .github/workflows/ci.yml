<<<<<<< HEAD
name: CI Build
=======
name: Build and Setup
>>>>>>> ci-test

on:
  push:
    branches:
<<<<<<< HEAD
      - main
=======
      - ci-test
>>>>>>> ci-test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
<<<<<<< HEAD
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Dependencies
=======
      - name: Check out code
        uses: actions/checkout@v3

      - name: Add XMake PPA and install dependencies
>>>>>>> ci-test
        run: |
          sudo apt update
          sudo add-apt-repository ppa:xmake-io/xmake -y
          sudo apt update
<<<<<<< HEAD
          sudo apt install -y nim
          sudo apt install -y xmake python3-pip
          pip install --upgrade pip
          pip install kconfiglib scons requests tqdm psutil

      - name: Setup Environment and Build
        run: |
          # 使用 bash 作为 shell
          bash -c '
          source env.sh
          cd models
          xmake -vyD
          '
        shell: bash

        - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            models/rtthread.bin
            models/build/ext4.img
          retention-days: 7
=======
          sudo apt install -y xmake python3-pip
          pip install kconfiglib scons requests tqdm psutil

      - name: Setup Environment
        run: |
          script_dir="$(pwd)"

          export XMAKE_RCFILES=${script_dir}/tools/scripts/xmake.lua
          export RT_XMAKE_LINK_TYPE="static"

          # Check whether unzip is installed.
          if ! command -v unzip &> /dev/null; then
              echo "Unzip is not installed. Installing unzip"

              # Automatically install unzip according to package manager
              if [[ -n $(command -v apt-get) ]]; then
                  sudo apt-get update
                  sudo apt-get install -y unzip
              elif [[ -n $(command -v yum) ]]; then
                  sudo yum install -y unzip
              elif [[ -n $(command -v dnf) ]]; then
                  sudo dnf install -y unzip
              elif [[ -n $(command -v pacman) ]]; then
                  sudo pacman -Sy --noconfirm unzip
              else
                  echo "Unrecognized package manager, please install unzip manually."
                  exit 1
              fi

              echo "Unzip has been successfully installed."
              echo "smart-build env ready!"
          else
              echo "smart-build env ready!"
          fi

          export PATH=$(python3 -m site --user-base)/bin:$HOME/.env/tools/scripts:$PATH
          export RTT_EXEC_PATH=/usr/bin

      - name: Build with xmake
        run: |
          cd models
          xmake -vy
>>>>>>> ci-test
